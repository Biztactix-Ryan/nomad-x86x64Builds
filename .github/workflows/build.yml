name: Build Nomad for Windows x64

on:
  push:
    branches:
      - main
      - release/**
  workflow_dispatch:
    inputs:
      build-ref:
        description: 'The git ref to build from'
        type: string
        default: ''
        required: false
      make-prerelease:
        description: "Run prerelease to generate files"
        type: "boolean"
        required: false
        default: true

env:
  PKG_NAME: "nomad"
  GO_TAGS: "release"

jobs:
  get-go-version:
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.get-go-version.outputs.go-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.build-ref }}
      - name: Determine Go version
        id: get-go-version
        run: |
          echo "Building with Go $(cat .go-version)"
          echo "go-version=$(cat .go-version)" >> "$GITHUB_OUTPUT"

  get-product-version:
    runs-on: ubuntu-latest
    outputs:
      product-version: ${{ steps.get-product-version.outputs.product-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.build-ref }}
      - name: get product version
        id: get-product-version
        run: |
          make version
          echo "product-version=$(make version)" >> "$GITHUB_OUTPUT"

  build-windows:
    needs: [get-go-version, get-product-version]
    runs-on: windows-latest
    name: Go ${{ needs.get-go-version.outputs.go-version }} Windows x64 build

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.build-ref }}
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}

      - name: Build dependencies
        run: make deps

      - name: Setup node and yarn
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache-dependency-path: "ui/yarn.lock"

      - name: Install Yarn
        run: npm install -g yarn

      - name: Build prerelease
        run: make prerelease
        if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.make-prerelease == 'true' }}

      - name: Build
        env:
          GOOS: windows
          GOARCH: amd64
          GO_TAGS: ${{ env.GO_TAGS }}
          CGO_ENABLED: 1
        run: |
          go clean -cache
          make pkg/windows_amd64.zip
          mv pkg/windows_amd64.zip ${{ env.PKG_NAME }}_${{ needs.get-product-version.outputs.product-version }}_windows_amd64.zip

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PKG_NAME }}_${{ needs.get-product-version.outputs.product-version }}_windows_amd64.zip
          path: ${{ env.PKG_NAME }}_${{ needs.get-product-version.outputs.product-version }}_windows_amd64.zip

permissions:
  contents: read
  id-token: write
